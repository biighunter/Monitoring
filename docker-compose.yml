version: '3.8'

volumes:
  prometheus_data:
  grafana-data:

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - "--path.procfs=/host/proc"
    - "--path.rootfs=/rootfs"
    - "--path.sysfs=/host/sys"
    - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
    - "9100:9100"
    networks:
    - monitoring
    - Ho
  prometheus:
    image: prom/prometheus:latest
    user: "1001"
    environment: 
      - PUID=1001
      - PGID=1001
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - ":9090"
    expose:
      - 9090
    networks:
      - monitoring
      - Ho

  grafana:
    image: grafana/grafana:7.5.7
    user: "1001"
    container_name: grafana
    ports:
      - ":3000"
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
      - ./datasources:/etc/grafana/provisioning/datasources
    networks:
      - monitoring
      - Ho
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
      - Ho
    depends_on:
      - redis
  redis: 
    image: redis:latest 
    container_name: redis 
    ports: 
      - :6379 
    networks: 
      - monitoring
    

networks:
  monitoring:
    external: true
  Ho:
    external: true